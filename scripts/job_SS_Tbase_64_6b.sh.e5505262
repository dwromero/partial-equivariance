Loading anaconda3/personal
  Loading requirement: fix_unwritable_tmp fix_setxattr
wandb: Currently logged in as: tychovdo (use `wandb login --relogin` to force relogin)
wandb: Tracking run with wandb version 0.12.10
wandb: Syncing run eager-wood-4783
wandb: ‚≠êÔ∏è View project at https://wandb.ai/tychovdo/partial_equiv
wandb: üöÄ View run at https://wandb.ai/tychovdo/partial_equiv/runs/3hztxbml
wandb: Run data is saved locally in /tmp/pbs.5505262.pbs/outputs/2022-05-03/17-29-46/wandb/run-20220503_172946-3hztxbml
wandb: Run `wandb offline` to turn off syncing.
  0% 0/170498071 [00:00<?, ?it/s]  0% 33792/170498071 [00:00<15:34, 182359.17it/s]  0% 132096/170498071 [00:00<05:21, 530728.21it/s]  0% 377856/170498071 [00:00<02:14, 1263133.24it/s]  0% 623616/170498071 [00:00<01:41, 1675737.07it/s]  1% 1296384/170498071 [00:00<00:50, 3360140.12it/s]  2% 2752512/170498071 [00:00<00:24, 6975427.07it/s]  3% 4511744/170498071 [00:00<00:16, 10325872.08it/s]  4% 6538240/170498071 [00:00<00:12, 13379773.84it/s]  5% 8700928/170498071 [00:00<00:10, 15859246.67it/s]  6% 10945536/170498071 [00:01<00:08, 17854785.32it/s]  8% 13288448/170498071 [00:01<00:08, 19480457.04it/s]  9% 15467520/170498071 [00:01<00:07, 20150714.75it/s] 10% 17777664/170498071 [00:01<00:07, 21034905.58it/s] 12% 20382720/170498071 [00:01<00:06, 22538784.99it/s] 13% 22856704/170498071 [00:01<00:06, 23110843.62it/s] 15% 25232384/170498071 [00:01<00:06, 23275723.92it/s] 16% 27563008/170498071 [00:01<00:06, 22428813.16it/s] 17% 29814784/170498071 [00:01<00:06, 21800500.70it/s] 19% 32003072/170498071 [00:02<00:06, 21329017.15it/s] 20% 34341888/170498071 [00:02<00:06, 21800460.40it/s] 21% 36528128/170498071 [00:02<00:06, 21802191.01it/s] 23% 38713344/170498071 [00:02<00:06, 21371064.90it/s] 24% 40854528/170498071 [00:02<00:06, 20958646.73it/s] 25% 43074560/170498071 [00:02<00:05, 21290661.81it/s] 27% 45207552/170498071 [00:02<00:05, 20960216.10it/s] 28% 47306752/170498071 [00:02<00:05, 20895807.29it/s] 29% 49398784/170498071 [00:02<00:05, 20568966.92it/s] 30% 51458048/170498071 [00:02<00:05, 20571757.38it/s] 31% 53593088/170498071 [00:03<00:05, 20746720.09it/s] 33% 55903232/170498071 [00:03<00:05, 21399637.86it/s] 34% 58045440/170498071 [00:03<00:05, 21168941.81it/s] 35% 60164096/170498071 [00:03<00:05, 20998743.16it/s] 37% 62265344/170498071 [00:03<00:05, 20843063.04it/s] 38% 64351232/170498071 [00:03<00:05, 20827445.36it/s] 39% 66435072/170498071 [00:03<00:05, 20770736.99it/s] 40% 68512768/170498071 [00:03<00:04, 20654187.80it/s] 41% 70579200/170498071 [00:03<00:04, 20655927.23it/s] 43% 72645632/170498071 [00:03<00:04, 20548592.79it/s] 44% 74712064/170498071 [00:04<00:04, 20455910.76it/s] 45% 77125632/170498071 [00:04<00:04, 21547522.09it/s] 47% 79282176/170498071 [00:04<00:04, 21515115.57it/s] 48% 81434624/170498071 [00:04<00:04, 21015239.50it/s] 49% 83539968/170498071 [00:04<00:04, 20679358.03it/s] 50% 85611520/170498071 [00:04<00:04, 20427043.67it/s] 51% 87656448/170498071 [00:04<00:04, 20205027.36it/s] 53% 89678848/170498071 [00:04<00:04, 19968929.89it/s] 54% 91685888/170498071 [00:04<00:03, 19975016.51it/s] 55% 93864960/170498071 [00:04<00:03, 20490382.73it/s] 56% 95916032/170498071 [00:05<00:03, 20433593.59it/s] 58% 98141184/170498071 [00:05<00:03, 20957025.18it/s] 59% 100762624/170498071 [00:05<00:03, 22472294.89it/s] 61% 103334912/170498071 [00:05<00:02, 23367671.33it/s] 62% 105923584/170498071 [00:05<00:02, 24116050.04it/s] 64% 108463104/170498071 [00:05<00:02, 24393237.61it/s] 65% 111051776/170498071 [00:05<00:02, 24837539.66it/s] 67% 113607680/170498071 [00:05<00:02, 24970677.23it/s] 68% 116179968/170498071 [00:05<00:02, 25191321.28it/s] 70% 118703104/170498071 [00:06<00:02, 25196345.08it/s] 71% 121242624/170498071 [00:06<00:01, 25253323.68it/s] 73% 123798528/170498071 [00:06<00:01, 25245658.41it/s] 74% 126370816/170498071 [00:06<00:01, 25369102.96it/s] 76% 128908288/170498071 [00:06<00:01, 25336641.28it/s] 77% 131442688/170498071 [00:06<00:01, 25333413.12it/s] 79% 133977088/170498071 [00:06<00:01, 25202991.32it/s] 80% 136498176/170498071 [00:06<00:01, 25149410.74it/s] 82% 139019264/170498071 [00:06<00:01, 25064997.68it/s] 83% 141558784/170498071 [00:06<00:01, 25129573.46it/s] 85% 144072704/170498071 [00:07<00:01, 25112572.60it/s] 86% 146584576/170498071 [00:07<00:00, 25067097.52it/s] 87% 149160960/170498071 [00:07<00:00, 25243416.79it/s] 89% 152028160/170498071 [00:07<00:00, 26223162.40it/s] 91% 154928128/170498071 [00:07<00:00, 27028114.39it/s] 93% 157811712/170498071 [00:07<00:00, 27560836.06it/s] 94% 160678912/170498071 [00:07<00:00, 27881132.44it/s] 96% 163628032/170498071 [00:07<00:00, 28274922.10it/s] 98% 166740992/170498071 [00:07<00:00, 29111035.33it/s]100% 169690112/170498071 [00:07<00:00, 29144051.42it/s]170499072it [00:07, 21471813.07it/s]                   
  0% 0/170498071 [00:00<?, ?it/s]  0% 33792/170498071 [00:00<15:54, 178515.42it/s]  0% 197632/170498071 [00:00<04:45, 596524.46it/s]  0% 689152/170498071 [00:00<01:27, 1945812.26it/s]  1% 1754112/170498071 [00:00<00:40, 4200144.25it/s]  2% 3539968/170498071 [00:00<00:22, 7329853.13it/s]  4% 6816768/170498071 [00:00<00:11, 14086144.61it/s]  6% 10421248/170498071 [00:00<00:07, 20159750.50it/s]  8% 13861888/170498071 [00:01<00:06, 24192434.64it/s] 10% 17351680/170498071 [00:01<00:05, 27268002.84it/s] 12% 20841472/170498071 [00:01<00:05, 29487566.32it/s] 14% 24348672/170498071 [00:01<00:04, 31128857.27it/s] 16% 27788288/170498071 [00:01<00:04, 32094510.68it/s] 18% 31163392/170498071 [00:01<00:04, 32584982.48it/s] 20% 34472960/170498071 [00:01<00:04, 29770032.44it/s] 22% 37635072/170498071 [00:01<00:04, 29876918.42it/s] 24% 40944640/170498071 [00:01<00:04, 30784054.14it/s] 26% 44288000/170498071 [00:01<00:04, 31543998.78it/s] 28% 47842304/170498071 [00:02<00:03, 32702456.38it/s] 30% 51233792/170498071 [00:02<00:03, 32848162.43it/s] 32% 54871040/170498071 [00:02<00:03, 33841115.89it/s] 34% 58271744/170498071 [00:02<00:03, 32865691.93it/s] 36% 61575168/170498071 [00:02<00:03, 32831499.81it/s] 38% 64870400/170498071 [00:02<00:03, 31451246.79it/s] 40% 68142080/170498071 [00:02<00:03, 30911699.39it/s] 42% 71337984/170498071 [00:02<00:03, 31203883.82it/s] 44% 74564608/170498071 [00:02<00:03, 31300449.47it/s] 46% 78100480/170498071 [00:03<00:02, 32479526.68it/s] 48% 81609728/170498071 [00:03<00:02, 33241619.73it/s] 50% 85115904/170498071 [00:03<00:02, 33777102.33it/s] 52% 88624128/170498071 [00:03<00:02, 34164061.03it/s] 54% 92046336/170498071 [00:03<00:02, 33412066.29it/s] 56% 95421440/170498071 [00:03<00:02, 33483124.26it/s] 58% 98775040/170498071 [00:03<00:02, 32043692.14it/s] 60% 101994496/170498071 [00:03<00:02, 30988626.19it/s] 62% 105399296/170498071 [00:03<00:02, 31613650.18it/s] 64% 108903424/170498071 [00:03<00:01, 32597525.61it/s] 66% 112444416/170498071 [00:04<00:01, 33412685.42it/s] 68% 115950592/170498071 [00:04<00:01, 33671914.03it/s] 70% 119326720/170498071 [00:04<00:01, 32911033.46it/s] 72% 122684416/170498071 [00:04<00:01, 32742238.36it/s] 74% 126125056/170498071 [00:04<00:01, 33179930.03it/s] 76% 129448960/170498071 [00:04<00:01, 31489584.66it/s] 78% 132789248/170498071 [00:04<00:01, 32034050.91it/s] 80% 136054784/170498071 [00:04<00:01, 32213422.56it/s] 82% 139528192/170498071 [00:04<00:00, 32949411.57it/s] 84% 142951424/170498071 [00:04<00:00, 33284473.26it/s] 86% 146375680/170498071 [00:05<00:00, 33240125.69it/s] 88% 149705728/170498071 [00:05<00:00, 32280042.11it/s] 90% 153060352/170498071 [00:05<00:00, 32564090.09it/s] 92% 156484608/170498071 [00:05<00:00, 33039354.59it/s] 94% 159826944/170498071 [00:05<00:00, 33110912.31it/s] 96% 163142656/170498071 [00:05<00:00, 32658278.85it/s] 98% 166610944/170498071 [00:05<00:00, 33253645.82it/s]100% 169940992/170498071 [00:05<00:00, 32330373.69it/s]170499072it [00:05, 29206622.47it/s]                   
/rds/general/user/tv21/home/anaconda3/lib/python3.9/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  /opt/conda/conda-bld/pytorch_1640811803361/work/aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
wandb: Network error (ReadTimeout), entering retry loop.
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
wandb: Network error (ReadTimeout), entering retry loop.
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
wandb: Network error (ReadTimeout), entering retry loop.
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
[34m[1mwandb[0m: [33mWARNING[0m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
=>> PBS: job killed: walltime 172897 exceeded limit 172800
